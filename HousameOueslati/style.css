h1, h2, h3 {
    font-family: 'Roboto', sans-serif;
    font-weight: 100;
    text-transform: uppercase;
   margin:5px 0;
}

#logo-content {
    position: relative;
}
#logo-content img {
    position: absolute;
    top: 0px;
    left: 0px;
    height: 60px;
    width: 60px;
}
.header{
	color:grey;
	position: fixed;
	z-index: 2;
    margin-top: 0px;
	width: 100%;
	left:0;
	right: 0;
	top: 0;
    height:50px;
    background-image: url("images/header.png");
    border:0px none;
    margin:0px auto;
    padding-bottom: 0;
    
}
ul{
	list-style-type: none;
	margin: 0px;
	padding-left: 36%;
	width: 100%;
}

#game-menu{
    max-width: 200px;
    padding: 2px 2px;
    text-align: center;
    background: transparent; 
    margin-top: 7%;
    padding: 10px;
    background: #f4f7f8;
    border-radius: 8px;
    font-family: Georgia, "Times New Roman", Times, serif;
    font-size: 15pt;
    float: left;
}
.game-btn{
    background-color: #4CAF50; /* Green */
    border-style: inset;
    border-radius: 8px;
    width: 150px;
    color: white;
    padding: 15px 32px;
    margin-bottom: 10px;
    text-align: center;
    text-decoration: none;
    display: inline-block;
    font-size: 16px;
}
#game-box{

 
    text-align: center;
    max-width: 900px;
    max-height: 800px;
    padding: 5px 10px;
    background: transparent; 
    margin-left: 2%;
    margin-top: 7%;
    padding: 10px;
    background: #FFCC6F;
    border-radius: 8px;
    font-family: Georgia, "Times New Roman", Times, serif;
    font-size: 15pt;   
    float: left;
}
.header ul li {
	font-weight: bold;
	float: left;
	display: inline;
}
ul a{
	font-family: "Times New Roman", Times, serif;
	font-style: bold;
	font-size: 14pt;
	display: block;
	color: #bbc3ce;
	padding: 8px 12px 16px 8px;
}
body{
    padding-top: 20px;
}
.all{

    text-align: center;
    
}
table{
    max-height: 60%;
    max-width: 60%;
}
video#video-container{
 position: fixed; right: 0; bottom: 0;
 min-width: 100%; min-height: 100%;
 width: auto; height: auto; z-index: -100;
 background: url(MP4/Very-Open-Space.mp4) no-repeat;
 background-size: cover;
 margin: 0 auto;
}
h1, h2{
	color: white;
	font-size: 300%;
}
html, body, div, footer, p{
	margin: 0;
		padding: 0;
		border: 0;
		font-size: 100%;
		font: inherit;
		vertical-align: baseline;
	
}
.form-style{
    max-width: 500px;
    padding: 10px 20px;
    background: transparent;
    margin: 10px auto;
    margin-top: 10%;
    padding: 20px;
    background: #f4f7f8;
    border-radius: 8px;
    font-family: Georgia, "Times New Roman", Times, serif;
}
.form-style fieldset{
    border: none;
}
.form-style legend {
    font-size: 1.4em;
    margin-bottom: 10px;
}
.form-style label {
    display: block;
    margin-bottom: 8px;
}
.form-style input[type="text"],
.form-style input[type="date"],
.form-style input[type="datetime"],
.form-style input[type="email"],
.form-style input[type="number"],
.form-style input[type="search"],
.form-style input[type="time"],
.form-style input[type="url"],
.form-style textarea,
.form-style select {
    font-family: Georgia, "Times New Roman", Times, serif;
    background: rgba(255,255,255,.1);
    border: none;
    border-radius: 4px;
    font-size: 16px;
    margin: 0;
    outline: 0;
    padding: 7px;
    width: 100%;
    box-sizing: border-box; 
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box; 
    background-color: #e8eeef;
    color:#8a97a0;
    -webkit-box-shadow: 0 1px 0 rgba(0,0,0,0.03) inset;
    box-shadow: 0 1px 0 rgba(0,0,0,0.03) inset;
    margin-bottom: 30px;
    
}
.form-style input[type="text"]:focus,
.form-style input[type="date"]:focus,
.form-style input[type="datetime"]:focus,
.form-style input[type="email"]:focus,
.form-style input[type="number"]:focus,
.form-style input[type="search"]:focus,
.form-style input[type="time"]:focus,
.form-style input[type="url"]:focus,
.form-style textarea:focus,
.form-style select:focus{
    background: #d2d9dd;
}
.form-style select{
    -webkit-appearance: menulist-button;
    height:35px;
}
.form-style .number {
    background: #1abc9c;
    color: #fff;
    height: 30px;
    width: 30px;
    display: inline-block;
    font-size: 0.8em;
    margin-right: 4px;
    line-height: 30px;
    text-align: center;
    text-shadow: 0 1px 0 rgba(255,255,255,0.2);
    border-radius: 15px 15px 15px 0px;
}

.form-style input[type="submit"],
.form-style input[type="button"]
{
    position: relative;
    display: block;
    padding: 19px 39px 18px 39px;
    color: #FFF;
    margin: 0 auto;
    background: #1abc9c;
    font-size: 18px;
    text-align: center;
    font-style: normal;
    width: 100%;
    border: 1px solid #16a085;
    border-width: 1px 1px 3px;
    margin-bottom: 10px;
}
.form-style input[type="submit"]:hover,
.form-style input[type="button"]:hover
{
    background: #109177;
}


/* Footer */

	#footer {
		position: fixed;
        bottom: 0;
 		right: 0;
  		bottom: 0;
  		left: 0;
  		padding: 1rem;
  		text-align: center;

	}


		#footer .copyright {
			color: black;
			font-size: 0.8em;
			margin: 0 0 2em 0;
			padding: 0;
			font-weight: bold;
		}

			#footer .copyright a {
				color: black;
				text-decoration: none;
			}

				#footer .copyright a:hover {
					color: rgba(139, 80, 75, 0.5);
				}
/*Change the background-color if the viewport iÂ´s up to 980px*/
		@media screen and (max-width: 980px) {

			#footer {
				padding: 4em 0;
			}

		}

		@media screen and (max-width: 736px) {

			#footer {
				padding: 3em 0;
			}

		}


/* Mixin's */ 

@mixin transition {
  -webkit-transition: all 0.5s ease-in-out;
  -moz-transition: all 0.5s ease-in-out;
  transition: all 0.5s ease-in-out;
}

@mixin clear {
  &:after {
      content: "";
      display: table;
      clear: both;
    }
}

 @mixin box-size {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

 @mixin transition {
  -webkit-transition: all 0.3s ease-in-out;
  -moz-transition: all 0.3s ease-in-out;
  transition: all 0.3s ease-in-out;
}

@mixin fade {
  -moz-transition: all 1s ease-in;
  -moz-transition:all 0.3s ease-in-out;
  -webkit-transition:all 0.3s ease-in-out;
}

@mixin opacity {
  opacity:0.4;
  filter:alpha(opacity=40); 
  @include fade;
}

@mixin corners ($radius) {
  -moz-border-radius: $radius;
  -webkit-border-radius: $radius;
  border-radius: $radius; 
  -khtml-border-radius: $radius; 
}

h1 {font-size: 2.6em;}

h2 {font-size: 1.6em;}

p{font-size: 1.6em;}

.wrappper{
  @include clear;
  width:100%;
  margin:0 auto;
}


canvas{
  color:#45D4FF;
  border: #45D4FF 2px;
  padding:15px;
}
#alphabet {
  @include clear;
  margin:15px auto;
  padding:0;
  max-width:900px;
}

#alphabet li {
  float:left;
  margin: 0 10px 10px 0;
  list-style:none;
  width:35px;
  height:30px;
  padding-top:10px;
  background:$white;
  color:$base-color;
  cursor:pointer;
  @include corners(5px);
  border: solid 1px $white;
    
    &:hover{
      background:$base-color;
      border: solid 1px $white;
      color:$white;
    }
}

#my-word {
  margin: 0;
  display: block;
  padding: 0;
  display:block;
}

#my-word li {
  position: relative
  list-style: none;
  margin: 0;
  display: inline-block;
  padding: 0 10px;
  font-size:1.6em;
}

.active {
  @include opacity;
  cursor:default;
    
  &:hover{
      @include fade;
      @include opacity;
    }
}

#mylives{
  font-size:1.6em;
  text-align:center;
  display:block;
}

button{
  @include corners (5px);
  background:$base-color;
  color:$white;
  border: solid 1px $white;
  text-decoration:none;
  cursor:pointer;
  font-size:1.2em;
  padding:18px 10px;
  width:180px;
  margin: 10px;
  outline: none;
  
    &:hover{
      @include transition;
      background:$white;
      border: solid 1px $white;
      color:$base-color;
    }
}

@media (max-width: 767px) {
  #alphabet {
  padding:0 0 0 15px;
}
  }

  @media (max-width: 480px) {
  #alphabet {
  padding:0 0 0 25px;
}
  }
  /* Game 2048 css*/
  // helpers
// Exponent
// From: https://github.com/Team-Sass/Sassy-math/blob/master/sass/math.scss#L36

@function exponent($base, $exponent) {
  // reset value
  $value: $base;
  // positive intergers get multiplied
  @if $exponent > 1 {
    @for $i from 2 through $exponent {
      $value: $value * $base; } }
  // negitive intergers get divided. A number divided by itself is 1
  @if $exponent < 1 {
    @for $i from 0 through -$exponent {
      $value: $value / $base; } }
  // return the last value written
  @return $value;
}

@function pow($base, $exponent) {
  @return exponent($base, $exponent);
}

// Transition mixins
@mixin transition($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
}

@mixin transition-property($args...) {
  -webkit-transition-property: $args;
  -moz-transition-property: $args;
}

// Keyframe animations
@mixin keyframes($animation-name) {
  @-webkit-keyframes $animation-name {
    @content;
  }
  @-moz-keyframes $animation-name {
    @content;
  }
  @keyframes $animation-name {
    @content;
  }
}

@mixin animation($str) {
  -webkit-animation: #{$str};
  -moz-animation: #{$str};
}

@mixin animation-fill-mode($str) {
  -webkit-animation-fill-mode: #{$str};
  -moz-animation-fill-mode: #{$str};
}

// Media queries
@mixin smaller($width) {
  @media screen and (max-width: $width) {
    @content;
  }
}



// main.scss
$field-width: 500px;
$grid-spacing: 15px;
$grid-row-cells: 4;
$tile-size: ($field-width - $grid-spacing * ($grid-row-cells + 1)) / $grid-row-cells;
$tile-border-radius: 3px;

$text-color: #776E65;
$bright-text-color: #f9f6f2;

$tile-color: #eee4da;
$tile-gold-color: #edc22e;
$tile-gold-glow-color: lighten($tile-gold-color, 15%);

$game-container-background: #bbada0;

$transition-speed: 100ms;

html, body {
  margin: 0;
  padding: 0;

  background: #faf8ef;
  color: $text-color;
  font-family: "Clear Sans", "Helvetica Neue", Arial, sans-serif;
  font-size: 18px;
}

body {
  margin: 80px 0;
}

.heading:after {
  content: "";
  display: block;
  clear: both;
}

h1.title {
  font-size: 80px;
  font-weight: bold;
  margin: 0;
  display: block;
  float: left;
}

@include keyframes(move-up) {
  0% {
    top: 25px;
    opacity: 1;
  }

  100% {
    top: -50px;
    opacity: 0;
  }
}

.score-container {
  $height: 25px;

  position: relative;
  float: right;
  background: $game-container-background;
  padding: 15px 25px;
  font-size: $height;
  height: $height;
  line-height: $height + 22px;
  font-weight: bold;
  border-radius: 3px;
  color: white;
  margin-top: 8px;

  &:after {
    position: absolute;
    width: 100%;
    top: 10px;
    left: 0;
    content: "Score";
    text-transform: uppercase;
    font-size: 13px;
    line-height: 13px;
    text-align: center;
    color: $tile-color;
  }

  .score-addition {
    position: absolute;
    right: 30px;
    color: red;
    font-size: $height;
    line-height: $height;
    font-weight: bold;
    color: rgba($text-color, .9);
    z-index: 100;
    @include animation(move-up 600ms ease-in);
    @include animation-fill-mode(both);
  }
}

p {
  margin-top: 0;
  margin-bottom: 10px;
  line-height: 1.65;
}

a {
  color: $text-color;
  font-weight: bold;
  text-decoration: underline;
  cursor: pointer;
}

strong {
  &.important {
    text-transform: uppercase;
  }
}

hr {
  border: none;
  border-bottom: 1px solid lighten($text-color, 40%);
  margin-top: 20px;
  margin-bottom: 30px;
}

.container {
  width: $field-width;
  margin: 0 auto;
}

@include keyframes(fade-in) {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}

// Game field mixin used to render CSS at different width
@mixin game-field {
  .game-container {
    margin-top: 40px;
    position: relative;
    padding: $grid-spacing;

    cursor: default;
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -moz-user-select: none;

    background: $game-container-background;
    border-radius: $tile-border-radius * 2;
    width: $field-width;
    height: $field-width;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;

    .game-message {
      display: none;

      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      background: rgba($tile-color, .5);
      z-index: 100;

      text-align: center;

      p {
        font-size: 60px;
        font-weight: bold;
        height: 60px;
        line-height: 60px;
        margin-top: 222px;
        // height: $field-width;
        // line-height: $field-width;
      }

      .lower {
        display: block;
        margin-top: 59px;
      }

      a {
        display: inline-block;
        background: darken($game-container-background, 20%);
        border-radius: 3px;
        padding: 0 20px;
        text-decoration: none;
        color: $bright-text-color;
        height: 40px;
        line-height: 42px;
        margin-left: 9px;
        // margin-top: 59px;
      }

      @include animation(fade-in 800ms ease $transition-speed * 12);
      @include animation-fill-mode(both);

      &.game-won {
        background: rgba($tile-gold-color, .5);
        color: $bright-text-color;
      }

      &.game-won, &.game-over {
        display: block;
      }
    }
  }

  .grid-container {
    position: absolute;
    z-index: 1;
  }

  .grid-row {
    margin-bottom: $grid-spacing;

    &:last-child {
      margin-bottom: 0;
    }

    &:after {
      content: "";
      display: block;
      clear: both;
    }
  }

  .grid-cell {
    width: $tile-size;
    height: $tile-size;
    margin-right: $grid-spacing;
    float: left;

    border-radius: $tile-border-radius;

    background: rgba($tile-color, .35);

    &:last-child {
      margin-right: 0;
    }
  }

  .tile-container {
    position: absolute;
    z-index: 2;
  }

  .tile {
    width: $tile-size;
    height: $tile-size;
    line-height: $tile-size + 10px;

    // Build position classes
    @for $x from 1 through $grid-row-cells {
      @for $y from 1 through $grid-row-cells {
        &.tile-position-#{$x}-#{$y} {
          position: absolute;
          left: round(($tile-size + $grid-spacing) * ($x - 1));
          top: round(($tile-size + $grid-spacing) * ($y - 1));
        }
      }
    }
  }
}

// End of game-field mixin
@include game-field;

.tile {
  border-radius: $tile-border-radius;

  background: $tile-color;
  text-align: center;
  font-weight: bold;
  z-index: 10;

  font-size: 55px;

  @include transition($transition-speed ease-in-out);
  @include transition-property(top, left);

  $base: 2;
  $exponent: 1;
  $limit: 11;

  // Colors for all 11 states, false = no special color
  $special-colors: false false, // 2
                   false false, // 4
                   #f78e48 true, // 8
                   #fc5e2e true, // 16
                   #ff3333 true, // 32
                   #ff0000 true, // 64
                   false true, // 128
                   false true, // 256
                   false true, // 512
                   false true, // 1024
                   false true; // 2048

  // Build tile colors
  @while $exponent <= $limit {
    $power: pow($base, $exponent);

    &.tile-#{$power} {
      // Calculate base background color
      $gold-percent: ($exponent - 1) / ($limit - 1) * 100;
      $mixed-background: mix($tile-gold-color, $tile-color, $gold-percent);

      $nth-color: nth($special-colors, $exponent);

      $special-background: nth($nth-color, 1);
      $bright-color: nth($nth-color, 2);

      @if $special-background {
        $mixed-background: mix($special-background, $mixed-background, 55%);
      }

      @if $bright-color {
        color: $bright-text-color;
      }

      // Set background
      background: $mixed-background;

      // Add glow
      $glow-opacity: max($exponent - 4, 0) / ($limit - 4);

      @if not $special-background {
        box-shadow: 0 0 30px 10px rgba($tile-gold-glow-color, $glow-opacity / 1.8),
                    inset 0 0 0 1px rgba(white, $glow-opacity / 3);
      }

      // Adjust font size for bigger numbers
      @if $power >= 100 and $power < 1000 {
        font-size: 45px;

        // Media queries placed here to avoid carrying over the rest of the logic
        @include smaller(480px) {
          font-size: 25px;
        }
      } @else if $power >= 1000 {
        font-size: 35px;

        @include smaller(480px) {
          font-size: 15px;
        }
      }
    }

    $exponent: $exponent + 1;
  }
}

@include keyframes(appear) {
  0% {
    opacity: 0;
    -webkit-transform: scale(0);
    -moz-transform: scale(0);
  }

  100% {
    opacity: 1;
    -webkit-transform: scale(1);
    -moz-transform: scale(1);
  }
}

.tile-new {
  @include animation(appear 200ms ease $transition-speed);
  @include animation-fill-mode(both);
}

@include keyframes(pop) {
  0% {
    -webkit-transform: scale(0);
    -moz-transform: scale(0);
  }

  50% {
    -webkit-transform: scale(1.2);
    -moz-transform: scale(1.2);
  }

  100% {
    -webkit-transform: scale(1);
    -moz-transform: scale(1);
  }
}

.tile-merged {
  z-index: 20;
  @include animation(pop 200ms ease $transition-speed);
  @include animation-fill-mode(both);
}

.game-intro {
  margin-bottom: 0;
}

.game-explanation {
  margin-top: 50px;
}

@include smaller(480px) {
  // Redefine variables for smaller screens
  $field-width: 280px;
  $grid-spacing: 10px;
  $grid-row-cells: 4;
  $tile-size: ($field-width - $grid-spacing * ($grid-row-cells + 1)) / $grid-row-cells;
  $tile-border-radius: 3px;

  html, body {
    font-size: 15px;
  }

  body {
    margin: 20px 0;
    padding: 0 20px;
  }

  h1.title {
    font-size: 50px;
  }

  .container {
    width: $field-width;
    margin: 0 auto;
  }

  .score-container {
    margin-top: 0;
  }

  .heading {
    margin-bottom: 10px;
  }

  // Render the game field at the right width
  @include game-field;

  .game-container {
    margin-top: 20px;
  }

  // Rest of the font-size adjustments in the tile class
  .tile {
    font-size: 35px;
  }

  .game-message {
    p {
      font-size: 30px !important;
      height: 30px !important;
      line-height: 30px !important;
      margin-top: 90px !important;
    }

    .lower {
      margin-top: 30px !important;
    }
  }
}